{
  "name": "smambu",
  "version": "2.0.3",
  "description": "Clinic management",
  "private": true,
  "scripts": {
    "assemble:env:win32": "sort -u -t '=' -k 1,1 .env .env.example | grep -v '^$\\|^\\s*#' > .env",
    "assemble:env:nix": "sort -u -t '=' -k 1,1 .env .env.example | grep -v '^$\\|^\\s*#' > .env",
    "assemble:env-docker:nix": "./sync-env.sh .env.docker",
    "assemble:env-docker:win32": "FILE=.env.docker && REMOVED=removed.tmp && MERGED=merged.tmp && comm -23 <(grep -v '^$\\|^\\s*#' $FILE | sort -t '=' -k 1,1) <(grep -v '^$\\|^\\s*#' .env.example | sort -t '=' -k 1,1) > $REMOVED && sort -u -t '=' -k 1,1 $FILE .env.example | grep -v '^$\\|^\\s*#' | grep -F -f <(grep '=' $FILE) > $MERGED && cat $MERGED > $FILE && echo '## REMOVED' >> $FILE && cat $REMOVED >> $FILE && rm $MERGED $REMOVED",
    "assemble:env-ci:nix": "./sync-env.sh .env.ci",
    "assemble:env-ci:win32": "FILE=.env.ci && REMOVED=removed.tmp && MERGED=merged.tmp && comm -23 <(grep -v '^$\\|^\\s*#' $FILE | sort -t '=' -k 1,1) <(grep -v '^$\\|^\\s*#' .env.example | sort -t '=' -k 1,1) > $REMOVED && sort -u -t '=' -k 1,1 $FILE .env.example | grep -v '^$\\|^\\s*#' | grep -F -f <(grep '=' $FILE) > $MERGED && cat $MERGED > $FILE && echo '## REMOVED' >> $FILE && cat $REMOVED >> $FILE && rm $MERGED $REMOVED",
    "assemble:env-localci:nix": "./sync-env.sh .env.localci",  
    "assemble:env-localci:win32": "FILE=.env.localci && REMOVED=removed.tmp && MERGED=merged.tmp && comm -23 <(grep -v '^$\\|^\\s*#' $FILE | sort -t '=' -k 1,1) <(grep -v '^$\\|^\\s*#' .env.example | sort -t '=' -k 1,1) > $REMOVED && sort -u -t '=' -k 1,1 $FILE .env.example | grep -v '^$\\|^\\s*#' | grep -F -f <(grep '=' $FILE) > $MERGED && cat $MERGED > $FILE && echo '## REMOVED' >> $FILE && cat $REMOVED >> $FILE && rm $MERGED $REMOVED",  
    "assemble:env": "run-script-os",
    "assemble:env-ci": "run-script-os",
    "assemble:env-docker": "run-script-os",
    "assemble:env-localci": "run-script-os",
    "assemble:env:all": "npm run assemble:env && npm run assemble:env-ci && npm run assemble:env-localci && npm run assemble:env-docker",
    "setup:nix": "npm i && npm run compile:all && npm run assemble:env:all",
    "setup:win32": "npm i && npm run compile:all && npm run assemble:env:all",
    "setup": "run-script-os",
    "tsc": "tsc",
    "lint": "npx eslint --ext .tsx,.ts .",
    "install:all": "npm install --workspaces --if-present",
    "ci:all": "npm ci --workspaces --if-present",
    "build": "npm run build --workspaces --if-present",
    "deploy": "npm run deploy --workspaces --if-present",
    "clean": "npm run clean --workspaces --if-present",
    "dev": "npm run dev --workspaces --if-present",
    "dev:auth": "npm run dev -w backend/ascos-auth",
    "dev:roles": "npm run dev -w backend/ascos-roles",
    "dev:billing": "npm run dev -w backend/ascos-billing",
    "dev:users": "npm run dev -w backend/ascos-users",
    "dev:anagraphics": "npm run dev -w backend/ascos-anagraphics",
    "dev:contracts": "npm run dev -w backend/ascos-contracts",
    "dev:ormanagement": "npm run dev -w backend/ascos-ormanagement",
    "dev:system-configuration": "npm run dev -w backend/ascos-system-configuration",
    "dev:frontend": "npm run dev -w frontend",
    "dev:bucket": "npm run dev -w backend/ascos-bucket",
    "dev:schedulingCases": "npm run dev -w backend/ascos-scheduling-cases",
    "dev:log": "npm run dev -w backend/ascos-logs",
    "dev:patients": "npm run dev -w backend/ascos-patient-anagraphics",
    "dev:notifications": "npm run dev -w backend/ascos-notifications",
    "dev:tenants": "npm run dev -w backend/ascos-tenants",
    "dev:ur": "npm run dev -w backend/universal-reporting",
    "compile:constants": "npm run compile -w constantsjs",
    "compile:commons-be": "npm run compile -w commons-be",
    "compile:all": "npm run compile:constants && npm run compile:commons-be",
    "watch:commons-be": "npm run compile:watch -w commons-be",
    "seed": "cd backend/ascos-users && node --require dotenv/config dist/seeder.js",
    "dev:all": "npm-run-all -l -p -r watch:commons-be dev:auth dev:roles dev:users dev:anagraphics dev:billing dev:system-configuration dev:contracts dev:frontend dev:bucket dev:schedulingCases dev:log dev:patients dev:ormanagement dev:notifications dev:tenants dev:ur",
    "dev:test": "npm run compile:all && npm-run-all -l -p -r dev:auth dev:roles dev:log dev:users dev:ur",
    "dbs:start": "docker compose -f docker-compose-db.yml up -d",
    "dbs:stop": "docker compose -f docker-compose-db.yml down",
    "docker:ci": "./launch_docker.sh ci",
    "docker:localci": "./launch_docker.sh localci",
    "docker:dev": "./launch_docker.sh docker",
    "docker:down": "./launch_docker.sh down",
    "prepare": "husky",
    "checknodeversion": "node -e \"const semver = require('semver'); const pkg = require('./package.json'); const requiredVersion = pkg.engines.node; const currentVersion = process.version.slice(1); if (!semver.satisfies(currentVersion, requiredVersion)) { console.error('Node.js version is below', requiredVersion, '. Please update your Node.js version.'); process.exit(1); }\"",
    "prelint": "npm run checknodeversion",
    "preinstall:all": "npm run checknodeversion",
    "preci:all": "npm run checknodeversion",
    "prebuild": "npm run checknodeversion",
    "predeploy": "npm run checknodeversion",
    "preclean": "npm run checknodeversion",
    "predev": "npm run checknodeversion",
    "predev:auth": "npm run checknodeversion",
    "predev:roles": "npm run checknodeversion",
    "predev:billing": "npm run checknodeversion",
    "predev:users": "npm run checknodeversion",
    "predev:anagraphics": "npm run checknodeversion",
    "predev:contracts": "npm run checknodeversion",
    "predev:ormanagement": "npm run checknodeversion",
    "predev:system-configuration": "npm run checknodeversion",
    "predev:frontend": "npm run checknodeversion",
    "predev:bucket": "npm run checknodeversion",
    "predev:schedulingCases": "npm run checknodeversion",
    "predev:log": "npm run checknodeversion",
    "predev:patients": "npm run checknodeversion",
    "predev:notifications": "npm run checknodeversion",
    "predev:tenants": "npm run checknodeversion",
    "predev:ur": "npm run checknodeversion",
    "precompile:constants": "npm run checknodeversion",
    "precompile:commons-be": "npm run checknodeversion",
    "precompile:all": "npm run checknodeversion",
    "prewatch:commons-be": "npm run checknodeversion",
    "preseed": "npm run checknodeversion",
    "predev:all": "npm run checknodeversion",
    "predbs:start": "npm run checknodeversion",
    "predbs:stop": "npm run checknodeversion"
  },
  "lint-prepush": {
    "tasks": {
      "*.{ts,tsx}": [
        "eslint"
      ]
    }
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "workspaces": [
    "frontend",
    "backend/ascos-auth",
    "backend/ascos-roles",
    "backend/ascos-billing",
    "backend/ascos-users",
    "backend/ascos-contracts",
    "backend/ascos-ormanagement",
    "backend/ascos-anagraphics",
    "backend/ascos-bucket",
    "backend/ascos-scheduling-cases",
    "backend/ascos-system-configuration",
    "backend/ascos-patient-anagraphics",
    "backend/ascos-logs",
    "backend/ascos-notifications",
    "backend/ascos-tenants",
    "backend/universal-reporting",
    "commons-be",
    "constants",
    "constantsjs"
  ],
  "devDependencies": {
    "@playwright/test": "^1.45.0",
    "@typescript-eslint/eslint-plugin": "^8.3.0",
    "@types/node": "^22.9.0",
    "@typescript-eslint/parser": "^8.2.0",
    "eslint": "^8.16.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-standard": "^17.0.0",
    "eslint-plugin-import": "^2.26.0",
    "eslint-plugin-n": "^15.7.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-promise": "^6.0.0",
    "eslint-plugin-react": "^7.30.0",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-unused-imports": "^4.0.1",
    "npm-run-all": "^4.1.5",
    "prettier-eslint": "^15.0.1",
    "run-script-os": "^1.1.6",
    "typescript": "^4.7.2",
    "dotenv-cli": "^7.4.1",
    "@stylistic/eslint-plugin": "^2.6.1",
    "husky": "^9.1.5",
    "eslint-plugin-etc": "^2.0.3",
    "lint-prepush": "^3.0.2",
    "semver": "^7.6.3"
  },
  "dependencies": {
    "esbuild": "^0.16.17",
    "pdfkit-table": "^0.1.99",
    "redlock": "^5.0.0-beta.2"
  },
  "engines": {
    "node": ">=22"
  }
}
